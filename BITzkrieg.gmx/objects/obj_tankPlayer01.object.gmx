<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tankUp01</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_tankPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_tankUp01</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/*dir = 90;
spd = 4;
face = dir;

tier = 1;
mines = 0;*/

//para o spawn saber se já existe um tanque na tela
global.tank1Exists = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

global.vidas1--;
global.tank1Exists = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
right = keyboard_check(global.direita1);
up = keyboard_check(global.cima1);
left = keyboard_check(global.esquerda1);
down = keyboard_check(global.baixo1);

//Movimentação do tanque
if(right==true and moving_y==false){
    moving_x = true;
    switch(tier){
    case 1:
        sprite_index = spr_tankRight01;
        break;
    case 2:
        sprite_index = spr_tankRight02;
        break;
    case 3:
        sprite_index = spr_tankRight03;
        break;
    case 4:
        sprite_index = spr_tankRight04;
        break;
    }
    face = 0;   
    image_speed = 1; 
    if (/*place_meeting(x+spd,y,obj_block)=false and*/ x+48 &lt; room_width){
        x+=spd;
    }
}
if(up==true and moving_x==false){
    moving_y = true;
    switch(tier){
    case 1:
        sprite_index = spr_tankUp01;
        break;
    case 2:
        sprite_index = spr_tankUp02;
        break;
    case 3:
        sprite_index = spr_tankUp03;
        break;
    case 4:
        sprite_index = spr_tankUp04;
        break;
    }
    face = 90
    image_speed = 1;
    if  (/*place_meeting(x,y-spd,obj_block)=false &amp;&amp; */y &gt; 0){
        y-=spd;
        
    }
}
if(left==true and moving_y==false){
    moving_x=true;
    switch(tier){
    case 1:
        sprite_index = spr_tankLeft01;
        break;
    case 2:
        sprite_index = spr_tankLeft02;
        break;
    case 3:
        sprite_index = spr_tankLeft03;
        break;
    case 4:
        sprite_index = spr_tankLeft04;
        break;
    }
    face = 180;
    image_speed = 1;
    if (/*place_meeting(x-spd,y,obj_block)=false &amp;&amp; */x &gt; 0){
        x-=spd;
    }
}
if(down==true and moving_x==false){
    moving_y=true;
    switch(tier){
    case 1:
        sprite_index = spr_tankDown01;
        break;
    case 2:
        sprite_index = spr_tankDown02;
        break;
    case 3:
        sprite_index = spr_tankDown03;
        break;
    case 4:
        sprite_index = spr_tankDown04;
        break;
    }
    face = 270;
    image_speed = 1;
    if (/*place_meeting(x,y+spd,obj_block)=false &amp;&amp; */y+48 &lt; room_height){
        y+=spd;
    }
}
if(right==false and left==false){
    moving_x=false;
}
if(up==false and down==false){
    moving_y=false;
}
if(moving_x==false and moving_y==false){
    image_speed = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tiro
if(keyboard_check_pressed(global.tiro1)){
    atira(self.face,"player01");
}

if(keyboard_check_pressed(global.mina1)){
    if(mines &gt; 0){
        colocaMina(self.face);
        mines--;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
